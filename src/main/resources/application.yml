spring:
#  aws에서 설정

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: spring
    password: 1234

#  파일 관련
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  jpa:
    hibernate:
      ddl-auto: update
    # 전송 쿼리 확인
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true

# 인증값은 github 업뎃 절대 하지 말것
  security:
    oauth2:
      client:
        registration:
          google:
            client-id:
            client-secret:
            scope:
              - email
              - profile

         # 네이버는 oauth2.0 공식 지원이 되지 않기 때문에 provider 설정 필요, 요청 주소, 응답 데이터 다름
          naver:
            client-id:
            client-secret:
            scope:
              - name
              - email
            client-name: Naver # client-name은 대문자로 시작
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌

# data.sql 실행
#  sql:
#    init:
#      mode: always

jwt:
  issuer: appleg1418@gmail.com
  secret_key: secret-key